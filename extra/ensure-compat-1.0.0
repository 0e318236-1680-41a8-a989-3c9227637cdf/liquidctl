#!/usr/bin/env python3

"""Test the use of APIs from liquidctl v1.0.0.

While at the time all APIs were undocumented, we choose to support the use
cases from GKraken as that software is a substantial contribution to the
community.
"""

from liquidctl.driver.kraken_two import KrakenTwoDriver
from liquidctl.version import __version__
import liquidctl.cli

SPECTRUM = [
    (235,77,40),
    (255,148,117),
    (126,66,45),
    (165,87,0),
    (56,193,66),
    (116,217,170),
    (166,158,255),
    (208,0,122)
]

if __name__ == '__main__':
    print('Running on liquidctl version: {}'.format(__version__))

    devices = liquidctl.cli.find_all_supported_devices()  # used by GKraken

    for d in devices:
        # only the KrakenTwoDriver was available at v1.0.0
        if not isinstance(d, KrakenTwoDriver):
            continue

        print('Connecting')
        # depreacted behavior in favor of connect()
        d.initialize()  # used by GKraken

        print('Setting the lighting to super')
        # deprecated in favor of super-fixed, super-breathing and super-wave
        d.set_color('sync', 'super', [(128,0,255)] + SPECTRUM, 'normal')  # used by GKraken

        print('Status:')
        for k, v, u in d.get_status():  # used by GKraken
            print('  {}: {} {}'.format(k, v, u))  # ignoring: GKraken unreasonably expects a particular ordering

        print('Disconnecting')
        # deprecated in favor of disconnect()
        d.finalize()  # used by GKraken

